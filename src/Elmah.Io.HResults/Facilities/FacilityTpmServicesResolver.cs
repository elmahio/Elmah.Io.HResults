namespace Elmah.Io.HResults.Facilities
{
    internal class FacilityTpmServicesResolver : FacilityResolverBase
    {
        public FacilityTpmServicesResolver() : base(40, "FACILITY_TPM_SERVICES")
        {
        }

        internal override Code Resolve(bool failure, int code)
        {
            return code switch
            {
                0 => new Code(code, "TPM_E_ERROR_MASK", "This is an error mask to convert Trusted Platform Module (TPM) hardware errors to Win32 errors."),
                1 => new Code(code, "TPM_E_AUTHFAIL", "Authentication failed."),
                2 => new Code(code, "TPM_E_BADINDEX", "The index to a Platform Configuration Register (PCR), DIR, or other register is incorrect."),
                3 => new Code(code, "TPM_E_BAD_PARAMETER", "One or more parameters are bad."),
                4 => new Code(code, "TPM_E_AUDITFAILURE", "An operation completed successfully but the auditing of that operation failed."),
                5 => new Code(code, "TPM_E_CLEAR_DISABLED", "The clear disable flag is set and all clear operations now require physical access."),
                6 => new Code(code, "TPM_E_DEACTIVATED", "The TPM is deactivated."),
                7 => new Code(code, "TPM_E_DISABLED", "The TPM is disabled."),
                8 => new Code(code, "TPM_E_DISABLED_CMD", "The target command has been disabled."),
                9 => new Code(code, "TPM_E_FAIL", "The operation failed."),
                10 => new Code(code, "TPM_E_BAD_ORDINAL", "The ordinal was unknown or inconsistent."),
                11 => new Code(code, "TPM_E_INSTALL_DISABLED", "The ability to install an owner is disabled."),
                12 => new Code(code, "TPM_E_INVALID_KEYHANDLE", "The key handle cannot be interpreted."),
                13 => new Code(code, "TPM_E_KEYNOTFOUND", "The key handle points to an invalid key."),
                14 => new Code(code, "TPM_E_INAPPROPRIATE_ENC", "Unacceptable encryption scheme."),
                15 => new Code(code, "TPM_E_MIGRATEFAIL", "Migration authorization failed."),
                16 => new Code(code, "TPM_E_INVALID_PCR_INFO", "PCR information could not be interpreted."),
                17 => new Code(code, "TPM_E_NOSPACE", "No room to load key."),
                18 => new Code(code, "TPM_E_NOSRK", "There is no storage root key (SRK) set."),
                19 => new Code(code, "TPM_E_NOTSEALED_BLOB", "An encrypted blob is invalid or was not created by this TPM."),
                20 => new Code(code, "TPM_E_OWNER_SET", "There is already an owner."),
                21 => new Code(code, "TPM_E_RESOURCES", "The TPM has insufficient internal resources to perform the requested action."),
                22 => new Code(code, "TPM_E_SHORTRANDOM", "A random string was too short."),
                23 => new Code(code, "TPM_E_SIZE", "The TPM does not have the space to perform the operation."),
                24 => new Code(code, "TPM_E_WRONGPCRVAL", "The named PCR value does not match the current PCR value."),
                25 => new Code(code, "TPM_E_BAD_PARAM_SIZE", "The paramSize argument to the command has the incorrect value."),
                26 => new Code(code, "TPM_E_SHA_THREAD", "There is no existing SHA-1 thread."),
                27 => new Code(code, "TPM_E_SHA_ERROR", "The calculation is unable to proceed because the existing SHA-1 thread has already encountered an error."),
                28 => new Code(code, "TPM_E_FAILEDSELFTEST", "Self-test has failed and the TPM has shut down."),
                29 => new Code(code, "TPM_E_AUTH2FAIL", "The authorization for the second key in a two-key function failed authorization."),
                30 => new Code(code, "TPM_E_BADTAG", "The tag value sent to for a command is invalid."),
                31 => new Code(code, "TPM_E_IOERROR", "An I/O error occurred transmitting information to the TPM."),
                32 => new Code(code, "TPM_E_ENCRYPT_ERROR", "The encryption process had a problem."),
                33 => new Code(code, "TPM_E_DECRYPT_ERROR", "The decryption process did not complete."),
                34 => new Code(code, "TPM_E_INVALID_AUTHHANDLE", "An invalid handle was used."),
                35 => new Code(code, "TPM_E_NO_ENDORSEMENT", "The TPM does not have an endorsement key (EK) installed."),
                36 => new Code(code, "TPM_E_INVALID_KEYUSAGE", "The usage of a key is not allowed."),
                37 => new Code(code, "TPM_E_WRONG_ENTITYTYPE", "The submitted entity type is not allowed."),
                38 => new Code(code, "TPM_E_INVALID_POSTINIT", "The command was received in the wrong sequence relative to TPM_Init and a subsequent TPM_Startup."),
                39 => new Code(code, "TPM_E_INAPPROPRIATE_SIG", "Signed data cannot include additional DER information."),
                40 => new Code(code, "TPM_E_BAD_KEY_PROPERTY", "The key properties in TPM_KEY_PARMs are not supported by this TPM."),
                41 => new Code(code, "TPM_E_BAD_MIGRATION", "The migration properties of this key are incorrect."),
                42 => new Code(code, "TPM_E_BAD_SCHEME", "The signature or encryption scheme for this key is incorrect or not permitted in this situation."),
                43 => new Code(code, "TPM_E_BAD_DATASIZE", "The size of the data (or blob) parameter is bad or inconsistent with the referenced key."),
                44 => new Code(code, "TPM_E_BAD_MODE", "A mode parameter is bad, such as capArea or subCapArea for TPM_GetCapability, physicalPresence parameter for TPM_PhysicalPresence, or migrationType for TPM_CreateMigrationBlob."),
                45 => new Code(code, "TPM_E_BAD_PRESENCE", "Either the physicalPresence or physicalPresenceLock bits have the wrong value."),
                46 => new Code(code, "TPM_E_BAD_VERSION", "The TPM cannot perform this version of the capability."),
                47 => new Code(code, "TPM_E_NO_WRAP_TRANSPORT", "The TPM does not allow for wrapped transport sessions."),
                48 => new Code(code, "TPM_E_AUDITFAIL_UNSUCCESSFUL", "TPM audit construction failed and the underlying command was returning a failure code also."),
                49 => new Code(code, "TPM_E_AUDITFAIL_SUCCESSFUL", "TPM audit construction failed and the underlying command was returning success."),
                50 => new Code(code, "TPM_E_NOTRESETABLE", "Attempt to reset a PCR that does not have the resettable attribute."),
                51 => new Code(code, "TPM_E_NOTLOCAL", "Attempt to reset a PCR register that requires locality and the locality modifier not part of command transport."),
                52 => new Code(code, "TPM_E_BAD_TYPE", "Make identity blob not properly typed."),
                53 => new Code(code, "TPM_E_INVALID_RESOURCE", "When saving context identified resource type does not match actual resource."),
                54 => new Code(code, "TPM_E_NOTFIPS", "The TPM is attempting to execute a command only available when in Federal Information Processing Standards (FIPS) mode."),
                55 => new Code(code, "TPM_E_INVALID_FAMILY", "The command is attempting to use an invalid family ID."),
                56 => new Code(code, "TPM_E_NO_NV_PERMISSION", "The permission to manipulate the NV storage is not available."),
                57 => new Code(code, "TPM_E_REQUIRES_SIGN", "The operation requires a signed command."),
                58 => new Code(code, "TPM_E_KEY_NOTSUPPORTED", "Wrong operation to load an NV key."),
                59 => new Code(code, "TPM_E_AUTH_CONFLICT", "NV_LoadKey blob requires both owner and blob authorization."),
                60 => new Code(code, "TPM_E_AREA_LOCKED", "The NV area is locked and not writable."),
                61 => new Code(code, "TPM_E_BAD_LOCALITY", "The locality is incorrect for the attempted operation."),
                62 => new Code(code, "TPM_E_READ_ONLY", "The NV area is read-only and cannot be written to."),
                63 => new Code(code, "TPM_E_PER_NOWRITE", "There is no protection on the write to the NV area."),
                64 => new Code(code, "TPM_E_FAMILYCOUNT", "The family count value does not match."),
                65 => new Code(code, "TPM_E_WRITE_LOCKED", "The NV area has already been written to."),
                66 => new Code(code, "TPM_E_BAD_ATTRIBUTES", "The NV area attributes conflict."),
                67 => new Code(code, "TPM_E_INVALID_STRUCTURE", "The structure tag and version are invalid or inconsistent."),
                68 => new Code(code, "TPM_E_KEY_OWNER_CONTROL", "The key is under control of the TPM owner and can only be evicted by the TPM owner."),
                69 => new Code(code, "TPM_E_BAD_COUNTER", "The counter handle is incorrect."),
                70 => new Code(code, "TPM_E_NOT_FULLWRITE", "The write is not a complete write of the area."),
                71 => new Code(code, "TPM_E_CONTEXT_GAP", "The gap between saved context counts is too large."),
                72 => new Code(code, "TPM_E_MAXNVWRITES", "The maximum number of NV writes without an owner has been exceeded."),
                73 => new Code(code, "TPM_E_NOOPERATOR", "No operator AuthData value is set."),
                74 => new Code(code, "TPM_E_RESOURCEMISSING", "The resource pointed to by context is not loaded."),
                75 => new Code(code, "TPM_E_DELEGATE_LOCK", "The delegate administration is locked."),
                76 => new Code(code, "TPM_E_DELEGATE_FAMILY", "Attempt to manage a family other then the delegated family."),
                77 => new Code(code, "TPM_E_DELEGATE_ADMIN", "Delegation table management not enabled."),
                78 => new Code(code, "TPM_E_TRANSPORT_NOTEXCLUSIVE", "There was a command executed outside an exclusive transport session."),
                79 => new Code(code, "TPM_E_OWNER_CONTROL", "Attempt to context save an owner evict controlled key."),
                80 => new Code(code, "TPM_E_DAA_RESOURCES", "The DAA command has no resources available to execute the command."),
                81 => new Code(code, "TPM_E_DAA_INPUT_DATA0", "The consistency check on DAA parameter inputData0 has failed."),
                82 => new Code(code, "TPM_E_DAA_INPUT_DATA1", "The consistency check on DAA parameter inputData1 has failed."),
                83 => new Code(code, "TPM_E_DAA_ISSUER_SETTINGS", "The consistency check on DAA_issuerSettings has failed."),
                84 => new Code(code, "TPM_E_DAA_TPM_SETTINGS", "The consistency check on DAA_tpmSpecific has failed."),
                85 => new Code(code, "TPM_E_DAA_STAGE", "The atomic process indicated by the submitted DAA command is not the expected process."),
                86 => new Code(code, "TPM_E_DAA_ISSUER_VALIDITY", "The issuer's validity check has detected an inconsistency."),
                87 => new Code(code, "TPM_E_DAA_WRONG_W", "The consistency check on w has failed."),
                88 => new Code(code, "TPM_E_BAD_HANDLE", "The handle is incorrect."),
                89 => new Code(code, "TPM_E_BAD_DELEGATE", "Delegation is not correct."),
                90 => new Code(code, "TPM_E_BADCONTEXT", "The context blob is invalid."),
                91 => new Code(code, "TPM_E_TOOMANYCONTEXTS", "Too many contexts held by the TPM."),
                92 => new Code(code, "TPM_E_MA_TICKET_SIGNATURE", "Migration authority signature validation failure."),
                93 => new Code(code, "TPM_E_MA_DESTINATION", "Migration destination not authenticated."),
                94 => new Code(code, "TPM_E_MA_SOURCE", "Migration source incorrect."),
                95 => new Code(code, "TPM_E_MA_AUTHORITY", "Incorrect migration authority."),
                97 => new Code(code, "TPM_E_PERMANENTEK", "Attempt to revoke the EK and the EK is not revocable."),
                98 => new Code(code, "TPM_E_BAD_SIGNATURE", "Bad signature of CMK ticket."),
                99 => new Code(code, "TPM_E_NOCONTEXTSPACE", "There is no room in the context list for additional contexts."),
                1024 => new Code(code, "TPM_E_COMMAND_BLOCKED", "The command was blocked."),
                1025 => new Code(code, "TPM_E_INVALID_HANDLE", "The specified handle was not found."),
                1026 => new Code(code, "TPM_E_DUPLICATE_VHANDLE", "The TPM returned a duplicate handle and the command needs to be resubmitted."),
                1027 => new Code(code, "TPM_E_EMBEDDED_COMMAND_BLOCKED", "The command within the transport was blocked."),
                1028 => new Code(code, "TPM_E_EMBEDDED_COMMAND_UNSUPPORTED", "The command within the transport is not supported."),
                2048 => new Code(code, "TPM_E_RETRY", "The TPM is too busy to respond to the command immediately, but the command could be resubmitted at a later time."),
                2049 => new Code(code, "TPM_E_NEEDS_SELFTEST", "SelfTestFull has not been run."),
                2050 => new Code(code, "TPM_E_DOING_SELFTEST", "The TPM is currently executing a full self-test."),
                2051 => new Code(code, "TPM_E_DEFEND_LOCK_RUNNING", "The TPM is defending against dictionary attacks and is in a time-out period."),
                16385 => new Code(code, "TBS_E_INTERNAL_ERROR", "An internal software error has been detected."),
                16386 => new Code(code, "TBS_E_BAD_PARAMETER", "One or more input parameters are bad."),
                16387 => new Code(code, "TBS_E_INVALID_OUTPUT_POINTER", "A specified output pointer is bad."),
                16388 => new Code(code, "TBS_E_INVALID_CONTEXT", "The specified context handle does not refer to a valid context."),
                16389 => new Code(code, "TBS_E_INSUFFICIENT_BUFFER", "A specified output buffer is too small."),
                16390 => new Code(code, "TBS_E_IOERROR", "An error occurred while communicating with the TPM."),
                16391 => new Code(code, "TBS_E_INVALID_CONTEXT_PARAM", "One or more context parameters are invalid."),
                16392 => new Code(code, "TBS_E_SERVICE_NOT_RUNNING", "The TPM Base Services (TBS) is not running and could not be started."),
                16393 => new Code(code, "TBS_E_TOO_MANY_TBS_CONTEXTS", "A new context could not be created because there are too many open contexts."),
                16394 => new Code(code, "TBS_E_TOO_MANY_RESOURCES", "A new virtual resource could not be created because there are too many open virtual resources."),
                16395 => new Code(code, "TBS_E_SERVICE_START_PENDING", "The TBS service has been started but is not yet running."),
                16396 => new Code(code, "TBS_E_PPI_NOT_SUPPORTED", "The physical presence interface is not supported."),
                16397 => new Code(code, "TBS_E_COMMAND_CANCELED", "The command was canceled."),
                16398 => new Code(code, "TBS_E_BUFFER_TOO_LARGE", "The input or output buffer is too large."),
                _ => Unknown(code),
            };
        }
    }
}
